@model Door2DoorFrontEnd.Models.RouteModel
@{
    ViewData["Title"] = "Route";
    string videourl = @Model.RouteList[0].VideoUrl;
}

<style>
    .slider {
        -webkit-appearance: none;
        width: 100%;
        height: 25px;
        background: #d3d3d3;
        outline: none;
        opacity: 0.7;
        -webkit-transition: .4s;
        transition: opacity .2s;
    }

        .slider::-webkit-slider-thumb {
            appearance: none;
            width: 40px;
            height: 40px;
            background: #04AA6D;
            cursor: pointer;
        }

        .slider::-moz-range-thumb {
            width: 25px;
            height: 25px;
            background: #04AA6D;
            cursor: pointer;
        }

    .content {
        display: none;
    }

    }</style>
<html>
<head>
    <title>Video Player with Custom Slider</title>
</head>
<body>
    <div id="video-container">
        <video style="max-height:660px" id="video-player">
            <source src=@videourl type="video/mp4">
            Your browser does not support the video tag.
        </video>
    </div>
    <div id="slider-container">
        <input class="slider" type="range" id="slider" value="0" />
    </div>
</body>
<body>
    <button type="button" class="collapsible">Rute beskrivelse</button>
    <div class="content">
        <p style="color:white">
            @Model.RouteList[0].Description;
        </p>
    </div>
</body>
</html>

<script>
    var coll = document.getElementsByClassName("collapsible");
    var i;

    for (i = 0; i < coll.length; i++) {
        coll[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            } else {
                content.style.display = "block";
            }
        });
    }
</script>

<script runat="server">
    // Get the video player and slider elements
    const video = document.getElementById("video-player");
    const slider = document.getElementById("slider");

    // Update the slider position when the video is played or seeked
    video.addEventListener("play", updateSlider);
    video.addEventListener("seeked", updateSlider);

    // Update the video position when the slider is moved
    slider.addEventListener("input", updateVideo);

    function updateSlider() {
        // Calculate the current time and duration as percentages
        const currentTime = (video.currentTime / video.duration) * 100;
        const duration = (video.duration / video.duration) * 100;

        // Update the slider value and thumb position
        slider.value = currentTime;

        // Set the slider max value to the duration
        slider.max = duration;
    }

    function updateVideo() {
        // Calculate the new time based on the slider value
        const time = (slider.value / 100) * video.duration;

        // Set the video current time
        video.currentTime = time;
    }
</script>